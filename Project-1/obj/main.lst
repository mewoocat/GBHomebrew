                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _init_gfx
                                     13 	.globl _set_sprite_data
                                     14 	.globl _set_bkg_tiles
                                     15 	.globl _set_bkg_data
                                     16 	.globl _vsync
                                     17 ;--------------------------------------------------------
                                     18 ; special function registers
                                     19 ;--------------------------------------------------------
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area _DATA
                                     24 ;--------------------------------------------------------
                                     25 ; ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area _INITIALIZED
                                     28 ;--------------------------------------------------------
                                     29 ; absolute external ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area _DABS (ABS)
                                     32 ;--------------------------------------------------------
                                     33 ; global & static initialisations
                                     34 ;--------------------------------------------------------
                                     35 	.area _HOME
                                     36 	.area _GSINIT
                                     37 	.area _GSFINAL
                                     38 	.area _GSINIT
                                     39 ;--------------------------------------------------------
                                     40 ; Home
                                     41 ;--------------------------------------------------------
                                     42 	.area _HOME
                                     43 	.area _HOME
                                     44 ;--------------------------------------------------------
                                     45 ; code
                                     46 ;--------------------------------------------------------
                                     47 	.area _CODE
                                     48 ;src/main.c:8: void init_gfx(void) {
                                     49 ;	---------------------------------
                                     50 ; Function init_gfx
                                     51 ; ---------------------------------
    00000000                         52 _init_gfx::
                                     53 ;src/main.c:10: set_bkg_data(0, 79u, dungeon_tiles);
    00000000 11r00r00         [12]   54 	ld	de, #_dungeon_tiles
    00000003 D5               [16]   55 	push	de
    00000004 21 00 4F         [12]   56 	ld	hl, #0x4f00
    00000007 E5               [16]   57 	push	hl
    00000008 CDr00r00         [24]   58 	call	_set_bkg_data
    0000000B E8 04            [16]   59 	add	sp, #4
                                     60 ;src/main.c:11: set_bkg_tiles(0, 0, 32u, 32u, dungeon_mapPLN0);
    0000000D 11r00r00         [12]   61 	ld	de, #_dungeon_mapPLN0
    00000010 D5               [16]   62 	push	de
    00000011 21 20 20         [12]   63 	ld	hl, #0x2020
    00000014 E5               [16]   64 	push	hl
    00000015 AF               [ 4]   65 	xor	a, a
    00000016 0F               [ 4]   66 	rrca
    00000017 F5               [16]   67 	push	af
    00000018 CDr00r00         [24]   68 	call	_set_bkg_tiles
    0000001B E8 06            [16]   69 	add	sp, #6
                                     70 ;src/main.c:14: SHOW_BKG;
    0000001D F0r00            [12]   71 	ldh	a, (_LCDC_REG + 0)
    0000001F F6 01            [ 8]   72 	or	a, #0x01
    00000021 E0r00            [12]   73 	ldh	(_LCDC_REG + 0), a
                                     74 ;src/main.c:15: }
    00000023 C9               [16]   75 	ret
                                     76 ;src/main.c:18: void main(void)
                                     77 ;	---------------------------------
                                     78 ; Function main
                                     79 ; ---------------------------------
    00000024                         80 _main::
    00000024 3B               [ 8]   81 	dec	sp
    00000025 3B               [ 8]   82 	dec	sp
                                     83 ;src/main.c:20: init_gfx();
    00000026 CDr00r00         [24]   84 	call	_init_gfx
                                     85 ;src/main.c:22: SPRITES_8x8;
    00000029 F0r00            [12]   86 	ldh	a, (_LCDC_REG + 0)
    0000002B E6 FB            [ 8]   87 	and	a, #0xfb
    0000002D E0r00            [12]   88 	ldh	(_LCDC_REG + 0), a
                                     89 ;src/main.c:23: set_sprite_data(0, 1, blob);
    0000002F 11r00r00         [12]   90 	ld	de, #_blob
    00000032 D5               [16]   91 	push	de
    00000033 AF               [ 4]   92 	xor	a, a
    00000034 3C               [ 4]   93 	inc	a
    00000035 F5               [16]   94 	push	af
    00000036 CDr00r00         [24]   95 	call	_set_sprite_data
    00000039 E8 04            [16]   96 	add	sp, #4
                                     97 ;../Tools/gbdk/include/gb/gb.h:1875: shadow_OAM[nb].tile=tile;
    0000003B 21r02r00         [12]   98 	ld	hl, #(_shadow_OAM + 2)
    0000003E 36 00            [12]   99 	ld	(hl), #0x00
                                    100 ;../Tools/gbdk/include/gb/gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    00000040 21r00r00         [12]  101 	ld	hl, #_shadow_OAM
                                    102 ;../Tools/gbdk/include/gb/gb.h:1962: itm->y=y, itm->x=x;
    00000043 3E 64            [ 8]  103 	ld	a, #0x64
    00000045 22               [ 8]  104 	ld	(hl+), a
    00000046 36 50            [12]  105 	ld	(hl), #0x50
                                    106 ;src/main.c:26: SHOW_SPRITES;
    00000048 F0r00            [12]  107 	ldh	a, (_LCDC_REG + 0)
    0000004A F6 02            [ 8]  108 	or	a, #0x02
    0000004C E0r00            [12]  109 	ldh	(_LCDC_REG + 0), a
                                    110 ;src/main.c:27: int x = 0;
    0000004E AF               [ 4]  111 	xor	a, a
    0000004F F8 00            [12]  112 	ldhl	sp,	#0
    00000051 22               [ 8]  113 	ld	(hl+), a
    00000052 77               [ 8]  114 	ld	(hl), a
                                    115 ;src/main.c:28: int y = 0;
    00000053 01 00 00         [12]  116 	ld	bc, #0x0000
                                    117 ;src/main.c:30: while(1) {
    00000056                        118 00106$:
                                    119 ;src/main.c:33: move_sprite(0, x, y);
    00000056 51               [ 4]  120 	ld	d, c
    00000057 F8 00            [12]  121 	ldhl	sp,	#0
    00000059 5E               [ 8]  122 	ld	e, (hl)
                                    123 ;../Tools/gbdk/include/gb/gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    0000005A 21r00r00         [12]  124 	ld	hl, #_shadow_OAM
                                    125 ;../Tools/gbdk/include/gb/gb.h:1962: itm->y=y, itm->x=x;
    0000005D 7A               [ 4]  126 	ld	a, d
    0000005E 22               [ 8]  127 	ld	(hl+), a
    0000005F 73               [ 8]  128 	ld	(hl), e
                                    129 ;src/main.c:36: if (x == 168){
    00000060 F8 00            [12]  130 	ldhl	sp,	#0
    00000062 2A               [ 8]  131 	ld	a, (hl+)
    00000063 D6 A8            [ 8]  132 	sub	a, #0xa8
                                    133 ;src/main.c:37: x = 0;
    00000065 B6               [ 8]  134 	or	a,(hl)
    00000066 20 05            [12]  135 	jr	NZ, 00102$
    00000068 F8 00            [12]  136 	ldhl	sp,	#0
    0000006A 22               [ 8]  137 	ld	(hl+), a
    0000006B 77               [ 8]  138 	ld	(hl), a
                                    139 ;src/main.c:38: y++;
    0000006C 03               [ 8]  140 	inc	bc
    0000006D                        141 00102$:
                                    142 ;src/main.c:40: if (y == 160){
    0000006D 79               [ 4]  143 	ld	a, c
    0000006E D6 A0            [ 8]  144 	sub	a, #0xa0
    00000070 B0               [ 4]  145 	or	a, b
    00000071 20 03            [12]  146 	jr	NZ, 00104$
                                    147 ;src/main.c:41: y=0;
    00000073 01 00 00         [12]  148 	ld	bc, #0x0000
    00000076                        149 00104$:
                                    150 ;src/main.c:43: x++;
    00000076 F8 00            [12]  151 	ldhl	sp,	#0
    00000078 34               [12]  152 	inc	(hl)
    00000079 20 02            [12]  153 	jr	NZ, 00138$
    0000007B 23               [ 8]  154 	inc	hl
    0000007C 34               [12]  155 	inc	(hl)
    0000007D                        156 00138$:
                                    157 ;src/main.c:47: vsync();
    0000007D CDr00r00         [24]  158 	call	_vsync
    00000080 18 D4            [12]  159 	jr	00106$
                                    160 ;src/main.c:49: }
    00000082 33               [ 8]  161 	inc	sp
    00000083 33               [ 8]  162 	inc	sp
    00000084 C9               [16]  163 	ret
                                    164 	.area _CODE
                                    165 	.area _INITIALIZER
                                    166 	.area _CABS (ABS)
