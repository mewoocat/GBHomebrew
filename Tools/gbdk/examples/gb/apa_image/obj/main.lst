                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _draw_image
                                     13 	.globl _set_bkg_palette
                                     14 	.globl _vsync
                                     15 	.globl _cgb_pal_black
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 ;--------------------------------------------------------
                                     20 ; ram data
                                     21 ;--------------------------------------------------------
                                     22 	.area _DATA
                                     23 ;--------------------------------------------------------
                                     24 ; ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area _INITIALIZED
                                     27 ;--------------------------------------------------------
                                     28 ; absolute external ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area _DABS (ABS)
                                     31 ;--------------------------------------------------------
                                     32 ; global & static initialisations
                                     33 ;--------------------------------------------------------
                                     34 	.area _HOME
                                     35 	.area _GSINIT
                                     36 	.area _GSFINAL
                                     37 	.area _GSINIT
                                     38 ;--------------------------------------------------------
                                     39 ; Home
                                     40 ;--------------------------------------------------------
                                     41 	.area _HOME
                                     42 	.area _HOME
                                     43 ;--------------------------------------------------------
                                     44 ; code
                                     45 ;--------------------------------------------------------
                                     46 	.area _CODE
                                     47 ;src/main.c:13: void main(void)
                                     48 ;	---------------------------------
                                     49 ; Function main
                                     50 ; ---------------------------------
    00000000                         51 _main::
                                     52 ;src/main.c:16: if (_cpu == CGB_TYPE) {
    00000000 FAr00r00         [16]   53 	ld	a, (#__cpu)
    00000003 D6 11            [ 8]   54 	sub	a, #0x11
    00000005 20 0E            [12]   55 	jr	NZ, 00102$
                                     56 ;src/main.c:17: set_bkg_palette(BKGF_CGB_PAL0, CGB_ONE_PAL, cgb_pal_black);
    00000007 11r46r00         [12]   57 	ld	de, #_cgb_pal_black
    0000000A D5               [16]   58 	push	de
    0000000B AF               [ 4]   59 	xor	a, a
    0000000C 3C               [ 4]   60 	inc	a
    0000000D F5               [16]   61 	push	af
    0000000E CDr00r00         [24]   62 	call	_set_bkg_palette
    00000011 E8 04            [16]   63 	add	sp, #4
    00000013 18 04            [12]   64 	jr	00103$
    00000015                         65 00102$:
                                     66 ;src/main.c:19: BGP_REG = DMG_PALETTE(DMG_BLACK, DMG_BLACK, DMG_BLACK, DMG_BLACK);
    00000015 3E FF            [ 8]   67 	ld	a, #0xff
    00000017 E0r00            [12]   68 	ldh	(_BGP_REG + 0), a
    00000019                         69 00103$:
                                     70 ;src/main.c:25: draw_image(scenery_tiles);
    00000019 11r00r00         [12]   71 	ld	de, #_scenery_tiles
    0000001C CDr00r00         [24]   72 	call	_draw_image
                                     73 ;src/main.c:26: SHOW_BKG;
    0000001F F0r00            [12]   74 	ldh	a, (_LCDC_REG + 0)
    00000021 F6 01            [ 8]   75 	or	a, #0x01
    00000023 E0r00            [12]   76 	ldh	(_LCDC_REG + 0), a
                                     77 ;src/main.c:29: vsync();
    00000025 CDr00r00         [24]   78 	call	_vsync
                                     79 ;src/main.c:30: if (_cpu == CGB_TYPE) {
    00000028 FAr00r00         [16]   80 	ld	a, (#__cpu)
    0000002B D6 11            [ 8]   81 	sub	a, #0x11
    0000002D 20 0E            [12]   82 	jr	NZ, 00105$
                                     83 ;src/main.c:31: set_bkg_palette(BKGF_CGB_PAL0, CGB_ONE_PAL, scenery_palettes);
    0000002F 11r00r00         [12]   84 	ld	de, #_scenery_palettes
    00000032 D5               [16]   85 	push	de
    00000033 AF               [ 4]   86 	xor	a, a
    00000034 3C               [ 4]   87 	inc	a
    00000035 F5               [16]   88 	push	af
    00000036 CDr00r00         [24]   89 	call	_set_bkg_palette
    00000039 E8 04            [16]   90 	add	sp, #4
    0000003B 18 04            [12]   91 	jr	00108$
    0000003D                         92 00105$:
                                     93 ;src/main.c:33: BGP_REG = DMG_PALETTE(DMG_WHITE, DMG_LITE_GRAY, DMG_DARK_GRAY, DMG_BLACK);
    0000003D 3E E4            [ 8]   94 	ld	a, #0xe4
    0000003F E0r00            [12]   95 	ldh	(_BGP_REG + 0), a
                                     96 ;src/main.c:38: while(1) {
    00000041                         97 00108$:
                                     98 ;src/main.c:41: vsync();
    00000041 CDr00r00         [24]   99 	call	_vsync
                                    100 ;src/main.c:43: }
    00000044 18 FB            [12]  101 	jr	00108$
    00000046                        102 _cgb_pal_black:
    00000046 00 00                  103 	.dw #0x0000
    00000048 00 00                  104 	.dw #0x0000
    0000004A 00 00                  105 	.dw #0x0000
    0000004C 00 00                  106 	.dw #0x0000
                                    107 	.area _CODE
                                    108 	.area _INITIALIZER
                                    109 	.area _CABS (ABS)
